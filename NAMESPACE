# Generated by roxygen2: do not edit by hand

S3method("%and%",checkr_result)
S3method("%or%",checkr_result)
S3method(print,checkr_result)
export("%and%")
export("%not_same_as%")
export("%or%")
export("%same_as%")
export(all_tests)
export(any_test)
export(arg_calling)
export(arg_is)
export(arg_number)
export(capture.code)
export(chain_elements)
export(character_arg)
export(check)
export(check_argument)
export(check_binding)
export(check_blanks)
export(check_for_learnr)
export(check_function_calls)
export(checkr_tutor)
export(data_arg)
export(expand_all_chains)
export(expand_chain)
export(failed)
export(failif)
export(find_assignment)
export(find_call)
export(find_constants)
export(find_formula)
export(find_names)
export(first_arg)
export(for_checkr)
export(formula_arg)
export(formula_equals)
export(func_of)
export(function_arg)
export(grab_binding_anywhere)
export(grab_bindings)
export(insist)
export(is_chain)
export(lhs_equals)
export(line_binding)
export(line_calling)
export(line_chaining)
export(line_where)
export(lines_after)
export(list_arg)
export(matrix_arg)
export(misconception)
export(n_args)
export(named_arg)
export(not)
export(noteif)
export(numeric_arg)
export(ok)
export(parse_check)
export(passed)
export(passif)
export(pre_check)
export(print_function_contents)
export(rhs_contains)
export(rhs_equals)
export(table_arg)
export(trig_radian_check)
export(two_sided)
export(vector_arg)
importFrom(dplyr,filter)
importFrom(magrittr,"%>%")
importFrom(rlang,caller_env)
importFrom(rlang,child_env)
importFrom(rlang,enexpr)
importFrom(rlang,enquo)
importFrom(rlang,eval_bare)
importFrom(rlang,eval_tidy)
importFrom(rlang,expr)
importFrom(rlang,expr_text)
importFrom(rlang,f_lhs)
importFrom(rlang,f_rhs)
importFrom(rlang,get_expr)
importFrom(rlang,is_formula)
importFrom(rlang,is_function)
importFrom(rlang,is_lang)
importFrom(rlang,is_quosure)
importFrom(rlang,lang)
importFrom(rlang,lang_args)
importFrom(rlang,lang_args_names)
importFrom(rlang,lang_head)
importFrom(rlang,lang_tail)
importFrom(rlang,new_quosure)
importFrom(rlang,quo)
importFrom(rlang,quo_expr)
importFrom(rlang,quos)
importFrom(utils,capture.output)
importFrom(utils,head)
importFrom(utils,tail)
